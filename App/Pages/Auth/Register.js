import React, { useState, useCallback } from 'react'
import { Container, Header, Left, Body, Right, Button, Icon, Title, Content } from 'native-base';
import { Image, Text, TouchableOpacity, View, StatusBar, TextInput, ScrollView, Dimensions, StyleSheet, ActivityIndicator, Alert } from 'react-native';
import { createRequestGlobalTimeOut } from 'App/Helpers/Http';
import PushNotification from "react-native-push-notification";

// STYLING USING
import * as Styles from 'App/Styles';
// REDUX USING
import AppActions from 'App/Redux/Actions';
import { useDispatch, } from 'react-redux';
import { useSelector } from 'react-redux';
// Components
import { selectImage } from 'App/Helpers/ImageLoader';
import * as Hooks from 'App/Helpers/Hooks';
import ImagePart from 'App/Components/Widget/ImagePart';
import { imageLoader } from '../../Helpers/ImageLoader';
import RNPickerSelect from 'App/Components/Widget/PickerSelect';

import * as Animatable from 'react-native-animatable';

const { width, height } = Dimensions.get('window');

export default function Registrasi(props) {
    const dispatch = useDispatch();
    const [nik, setNik] = useState('');
    const [name, setName] = useState('');
    const [email, setEmail] = useState('');
    const [division, setDivision] = useState(null);
    const [position, setPosition] = useState(null);
    const [password, setPassword] = useState('');
    const [repassword, setRepassword] = useState('');
    const [isLoading, setLoading] = useState(false);
    const [optioPosition, setOptionPosition] = useState([]);



    const it_dev_position = [
        { key: 0, label: 'General Manager IT Development', value: 1, },
        { key: 1, label: 'Project Manager IT Development', value: 2, },
        { key: 2, label: 'Analis System', value: 3, },
        { key: 3, label: 'UI/UX Engginer', value: 4, },
        { key: 4, label: 'Web Developer', value: 5, },
        { key: 5, label: 'Mobile Developer', value: 6, },
    ];
    const hr_position = [
        { key: 6, label: 'General Manager HR', value: 7, },
        { key: 7, label: 'Manager HR', value: 8, },
        { key: 8, label: 'Staf HR', value: 9, },
    ];
    let optioDivision = [
        { key: 0, label: 'IT Development', value: 1, },
        { key: 2, label: 'Human Resource', value: 2 },

    ];


    const notification = () => {
        setTimeout(function () {
            PushNotification.localNotification({
                /* Android Only Properties */
                channelId: "Malintan2112", // (required) channelId, if the channel doesn't exist, notification will not trigger.
                /* iOS and Android properties */
                id: 0, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
                title: "Welcome to Dialy Apps", // (optional)
                message: "Yuk buat task pertama mu dulu !", // (required)
                userInfo: {}, // (optional) default: {} (using null throws a JSON value '<null>' error)
                playSound: false, // (optional) default: true
                soundName: "default", // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
                number: 0, // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
            });
        }, 5000);

    }
    const signUpFetch = () => {
        setLoading(true)
        fetch("https://malintan-projects.com/public/api/auth/signup", {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                nik: nik,
                name: name,
                email: email,
                division_id: division.toString(),
                position_id: position.toString(),
                password_confirmation: repassword,
                password: password

            })
        })

            .then((response) => response.json())
            .then((responseData) => {
                console.log(responseData)
                if (responseData.status) {
                    dispatch(AppActions.login());
                    console.log("Register Token");
                    console.log(responseData.data.token);

                    dispatch(AppActions.setApiToken(responseData.data.token));
                    dispatch(AppActions.setUserData(responseData.data.user));
                    setLoading(false)
                    notification()
                } else {
                    console.log(',asuk')

                    Alert.alert(
                        "Daily Reports Message",
                        responseData.errors.email[0] ?? "Pastikan Data Anda Benar"
                        [
                        {
                            text: "Cancel",
                            onPress: () => console.log("Cancel Pressed"),
                            style: "cancel"
                        },
                        { text: "OK", onPress: () => console.log("OK Pressed") }
                        ]
                    );
                    setLoading(false)

                }

            }).catch(() => {


            })
            .done();

    }
    const ValidateEmail = (mail) => {
        if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(mail)) {
            return (true)
        }

        return (false)
    }
    return (
        <Container>
            <View style={[Styles.Helpers.fullSize, Styles.Helpers.center, { backgroundColor: Styles.Colors.trueWhite, height: width * 0.8, flex: 1, position: "relative" }]}>
                <ScrollView showsVerticalScrollIndicator={false}>
                    <View style={{ height: 100 }}>
                    </View>
                    <View style={{ width: width * 0.8, marginVertical: 10, flexDirection: 'row' }}>
                        {nik == '' && <Text style={{ fontSize: 8, marginTop: 0, color: 'red', fontWeight: "bold", alignItems: 'flex-end', textAlign: 'right' }}>* </Text>}
                        <Text style={{ fontSize: 12, color: Styles.Colors.gray_var1, }}>NIK : </Text>
                    </View>
                    <View style={[{ width: width * 0.8, height: 45, borderWidth: 1, borderColor: '#d8d8d8', borderRadius: 5, paddingHorizontal: 20, justifyContent: 'center' }]}>
                        <TextInput
                            placeholder="Input Your NIK "
                            style={{ fontSize: 12 }}
                            value={nik}
                            keyboardType={"number-pad"}
                            onChangeText={(text) => setNik(text)}
                        />
                    </View>
                    <View style={{ width: width * 0.8, marginVertical: 10, flexDirection: 'row' }}>
                        {name == '' && <Text style={{ fontSize: 8, marginTop: 0, color: 'red', fontWeight: "bold", alignItems: 'flex-end', textAlign: 'right' }}>* </Text>}
                        <Text style={{ fontSize: 12, color: Styles.Colors.gray_var1, }}>Name : </Text>
                    </View>
                    <View style={[{ width: width * 0.8, height: 45, borderWidth: 1, borderColor: '#d8d8d8', borderRadius: 5, paddingHorizontal: 20, justifyContent: 'center' }]}>
                        <TextInput
                            placeholder="Input Your Name "
                            style={{ fontSize: 12 }}
                            value={name}
                            onChangeText={(text) => setName(text)}
                        />
                    </View>
                    <View style={{ width: width * 0.8, marginVertical: 10, flexDirection: 'row' }}>
                        {email == '' || !ValidateEmail(email) ? <Text style={{ fontSize: 8, marginTop: 0, color: 'red', fontWeight: "bold", alignItems: 'flex-end', textAlign: 'right' }}>* </Text> : null}
                        <Text style={{ fontSize: 12, color: Styles.Colors.gray_var1, }}>Email : </Text>
                    </View>
                    <View style={[{ width: width * 0.8, height: 45, borderWidth: 1, borderColor: '#d8d8d8', borderRadius: 5, paddingHorizontal: 20, justifyContent: 'center' }]}>
                        <TextInput
                            placeholder="Input Your Email "
                            style={{ fontSize: 12 }}
                            value={email}
                            onChangeText={(text) => setEmail(text)}
                        />
                    </View>

                    <View style={{ width: width * 0.8, marginVertical: 10, flexDirection: 'row' }}>
                        {division === null && <Text style={{ fontSize: 8, marginTop: 0, color: 'red', fontWeight: "bold", alignItems: 'flex-end', textAlign: 'right' }}>* </Text>}
                        <Text style={{ fontSize: 12, color: Styles.Colors.gray_var1, }}>Division : </Text>
                    </View>

                    <RNPickerSelect
                        useNativeAndroidPickerStyle={false}
                        onValueChange={(value) => {
                            setDivision(value)
                            setOptionPosition(value == 1 ? it_dev_position : hr_position);
                            setPosition(null);
                        }}

                        items={optioDivision}
                        style={{
                            ...pickerSelectStyles,
                            iconContainer: {
                                top: 10,
                                right: 15,
                            },
                        }}
                        InputAccessoryView={null}
                        placeholder={{
                            label: "Pilih Divisi",
                            value: null
                        }}
                        Icon={() => {
                            return (
                                <Icon
                                    name={'chevron-down'}
                                    type={'MaterialCommunityIcons'}
                                    style={{
                                        color: Styles.Colors.darkGray_var2,
                                        fontSize: 20,
                                    }}
                                />
                            );
                        }}
                    />
                    <View style={{ width: width * 0.8, marginVertical: 10, flexDirection: 'row' }}>
                        {position === null && <Text style={{ fontSize: 8, marginTop: 0, color: 'red', fontWeight: "bold", alignItems: 'flex-end', textAlign: 'right' }}>* </Text>}
                        <Text style={{ fontSize: 12, color: Styles.Colors.gray_var1, }}>Position : </Text>
                    </View>

                    <RNPickerSelect
                        useNativeAndroidPickerStyle={false}
                        onValueChange={(value) => {
                            console.log(value)
                            setPosition(value)
                        }}
                        items={optioPosition}
                        style={{
                            ...pickerSelectStyles,
                            iconContainer: {
                                top: 10,
                                right: 15,
                            },
                        }}

                        InputAccessoryView={null}
                        placeholder={{
                            label: "Pilih Posisi",
                            value: null
                        }}
                        Icon={() => {
                            return (
                                <Icon
                                    name={'chevron-down'}
                                    type={'MaterialCommunityIcons'}
                                    style={{
                                        color: Styles.Colors.darkGray_var2,
                                        fontSize: 20,
                                    }}
                                />
                            );
                        }}
                    />
                    <View style={{ width: width * 0.8, marginVertical: 10, flexDirection: 'row' }}>
                        {password == '' || password.length < 6 ? <Text style={{ fontSize: 8, marginTop: 0, color: 'red', fontWeight: "bold", alignItems: 'flex-end', textAlign: 'right' }}>* </Text> : null}
                        <Text style={{ fontSize: 12, color: Styles.Colors.gray_var1, }}>Password : </Text>
                    </View>
                    <View style={[{ width: width * 0.8, height: 45, borderWidth: 1, borderColor: '#d8d8d8', borderRadius: 5, paddingHorizontal: 20, justifyContent: 'center' }]}>
                        <TextInput
                            placeholder="Min  6 Character Password"
                            style={{ fontSize: 12 }}
                            value={password}
                            secureTextEntry={true}
                            onChangeText={(text) => setPassword(text)}
                        />
                    </View>
                    <View style={{ width: width * 0.8, marginVertical: 10, flexDirection: 'row' }}>
                        {repassword == '' || password != repassword || repassword.length < 6 ? <Text style={{ fontSize: 8, marginTop: 0, color: 'red', fontWeight: "bold", alignItems: 'flex-end', textAlign: 'right' }}>* </Text> : null}
                        <Text style={{ fontSize: 12, color: Styles.Colors.gray_var1, }}> Re-Password : </Text>
                    </View>
                    <View style={[{ width: width * 0.8, height: 45, borderWidth: 1, borderColor: '#d8d8d8', borderRadius: 5, paddingHorizontal: 20, justifyContent: 'center' }]}>
                        <TextInput
                            placeholder="Min  6 Character Repassword"
                            style={{ fontSize: 12 }}
                            value={repassword}
                            secureTextEntry={true}
                            onChangeText={(text) => setRepassword(text)}
                        />
                    </View>
                </ScrollView>
                <TouchableOpacity style={{ top: 0, left: 20, position: 'absolute', width: '100%', backgroundColor: Styles.Colors.trueWhite, paddingTop: 20 }} onPress={() => { props.navigation.pop() }}>
                    <Animatable.View animation={'slideInRight'} style={{ flexDirection: 'row' }}>
                        <View style={{ width: 45, elevation: 5, height: 45, borderRadius: 25, justifyContent: "center", alignItems: 'center', backgroundColor: Styles.Colors.trueWhite, }} >
                            <Icon type="FontAwesome" name="chevron-left" style={{ fontSize: 15, color: Styles.Colors.black, marginRight: 5, }} />
                        </View>
                        <View style={{ width: width * 0.8, marginLeft: 10, marginBottom: 40, }}>
                            <Text style={{ fontSize: 12, color: Styles.Colors.black, fontWeight: "800" }}>Formulir Registrasi</Text>
                            <Text style={{ fontSize: 30, color: Styles.Colors.black, fontWeight: "bold", marginTop: -5 }}>Daily Reports   </Text>
                        </View>
                    </Animatable.View>
                </TouchableOpacity>
                <TouchableOpacity
                    onPress={signUpFetch}
                    disabled={name === '' || password === '' || repassword === '' || email === '' || nik === '' || division === null || position === null || password != repassword || password.length < 6 || !ValidateEmail(email) || isLoading}
                    style={[{ width: "100%", paddingHorizontal: 20, alignItems: "center", marginTop: 30, marginBottom: 10 }]}>
                    <View style={[{ width: width * 0.8, height: 45, backgroundColor: Styles.Colors.primary, borderRadius: 5, justifyContent: "center", opacity: name === '' || password === '' || repassword === '' || email === '' || nik === '' || division === null || position === null || password != repassword || password.length < 6 || !ValidateEmail(email) || isLoading ? 0.5 : 1 }]}>
                        {isLoading ? (<ActivityIndicator size="small" color="white" />) : <Text style={{ textAlign: 'center', color: "white", fontWeight: "700" }}>Registrasi</Text>}
                    </View>
                </TouchableOpacity>
            </View>
        </Container>
    )
}

const pickerSelectStyles = StyleSheet.create({
    inputIOS: {
        alignContent: 'center',
        alignItems: 'center',
        height: 45,
        fontSize: 12,
        paddingHorizontal: 20,
        borderWidth: 1,
        borderColor: Styles.Colors.gray_var3,
        borderRadius: 5,
        color: Styles.Colors.black,
        backgroundColor: Styles.Colors.trueWhite,
        paddingRight: 30, // to ensure the text is never behind the icon
    },
    inputAndroid: {
        width: width * 0.8,
        alignContent: 'center',
        alignItems: 'center',
        height: 45,
        fontSize: 12,
        paddingHorizontal: 20,
        borderWidth: 1,
        borderColor: Styles.Colors.gray_var3,
        borderRadius: 5,
        color: Styles.Colors.black,
        backgroundColor: Styles.Colors.trueWhite,
        paddingRight: 30, // to ensure the text is never behind the icon
    },
    placeholder: {
        color: Styles.Colors.gray_var1
    }
});